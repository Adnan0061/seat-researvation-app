/api/reservations:
  post:
    tags:
      - Reservations
    summary: Create a new reservation
    description: Create a reservation for an event
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - eventId
              - numberOfSeats
            properties:
              eventId:
                type: string
                example: "60d3b41c0f1c2c001f3c9999"
              numberOfSeats:
                type: number
                example: 2
    responses:
      201:
        description: Reservation created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reservation"
      400:
        description: Invalid input or insufficient seats
      401:
        description: Unauthorized

  get:
    tags:
      - Reservations
    summary: Get user reservations
    description: Get all reservations for the authenticated user
    security:
      - bearerAuth: []
    responses:
      200:
        description: List of user reservations
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Reservation"
      401:
        description: Unauthorized

components:
  schemas:
    Reservation:
      type: object
      properties:
        _id:
          type: string
        eventId:
          type: string
        userId:
          type: string
        numberOfSeats:
          type: number
        status:
          type: string
          enum: [pending, confirmed, cancelled]
        totalPrice:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
